<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | FredLawl's Blog]]></title>
  <link href="http://fredlawl.github.io/articles/categories/android/atom.xml" rel="self"/>
  <link href="http://fredlawl.github.io/"/>
  <updated>2014-01-16T19:13:44-06:00</updated>
  <id>http://fredlawl.github.io/</id>
  <author>
    <name><![CDATA[Frederick Lawler]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Cordova for iOS &amp; Android Development]]></title>
    <link href="http://fredlawl.github.io/article/using-cordova-for-ios-and-android-development/"/>
    <updated>2014-01-11T22:25:40-06:00</updated>
    <id>http://fredlawl.github.io/article/using-cordova-for-ios-and-android-development</id>
    <content type="html"><![CDATA[<p>Recently I had the pleasure of writing my first mobile app. Without a background
or any general knowledge of Objective-C, I had to use my skills as a JavaScript
programmer to bridge the two together using a Open Sourced framework called <a href="http://cordova.apache.org/">Cordova</a>.</p>

<!-- more -->


<h2>Overview of Cordova</h2>

<p>Cordova is a mobile app framework with an emphasis on cross-compability of all
major mobile devices in the market. With a few vendor plugins, most of
functionality that you would expect from app can be easily installed and put to
use. Cordova also has extensive documentation that clearly outlines its usage
and configuration. The documentation also includes notes on creating custom
plugins if you can&rsquo;t find any others on git that meet your criteria.</p>

<h3>Some links to get started:</h3>

<ul>
<li><a href="http://cordova.apache.org/docs/en/3.2.0/index.html">Corodva Docs</a> for full documentation.</li>
<li><a href="http://cordova.apache.org/docs/en/3.2.0/guide_cli_index.md.html#The%20Command-Line%20Interface">Cordova CLI</a> for getting started with cordova.</li>
<li><a href="http://cordova.apache.org/docs/en/3.2.0/_index.html">Cordova Index</a> for documentation index.</li>
<li><a href="http://maxogden.com/fast-webview-applications.html">Fast WebView Applications</a> for useful tips/tricks to making your apps work nicely with CSS and HTML5</li>
</ul>


<h2>Solutions to Problems</h2>

<p>Working with Cordova was fairly simple and straight forward. The documentation
allowed me to create an app from start to finish with minimal headaches. Through
the development process there were some obstacles to overcome in a short period
of time.</p>

<p>An obstacle that was particularly hard to adjust to was the fact that the
project called for a mobile-site version, and a app version of the app.
Overcoming that obstacle was a challenge because links could not be treated in
the same manner. When compiled, the app relies on its internal file system to
load pages&mdash;where as a website would rely on its domain. The solution to this
problem was simple&mdash;routing system.</p>

<p>The issue with routing was that the routing system could not be based on a
absolute URL system. The absolute URL system would work best for a site, but not
for a app due to the difference in the file systems. The solution to that was to
implement a hash/push state routing system, which would allow the URLs to work
not only on a hosted website, but also the app itself.</p>

<p>Another problem I encountered that was absolutely terrifying to deal with was
external links vs internal links within the app/mobie-site. After hours of
querying Google for decent solutions to the problem, I barely found a solution.
The solution to the problem was to use Cordova&rsquo;s InAppBrowser
(which was not inherently clear&mdash;hence the hours of Google search) plugin&rsquo;s <code>window.open('http://url.com', '_system', 'location=no');</code>
which only works for iOS and a few other devices. Android was able to utilize <code>window.location = 'http://url.com';</code>.</p>

<p>Part of the reason this was a difficult problem was because that Cordova used
the WebViews that the different devices supplied. The WebViews could be best
described as web-browsers without the browsing (hence cross-compatibility via
HTML and JavaScript).</p>

<h2>Conclusion</h2>

<p>Overall Cordova was fairly fun to work with. No framework is without its quirks
and there will be many more obstacles for me in the future. The whole experience
really was exciting and I would recommend this framework to other developers.
Here&rsquo;s looking forward to future app development with Cordova!</p>
]]></content>
  </entry>
  
</feed>
